
# heating changed
  - id: heating_changed
    mode: restart
    trigger:
      - platform: state
        entity_id: input_boolean.heating
    action:
      - service: input_number.set_value
        data:
          entity_id: input_number.heating_temp_set
          value: >
            {% set temp_ent = "input_number.heating_{}_temp".format(states("input_boolean.heating")) %}
            {{ states(temp_ent) }}


# manual heating switched on
  - id: manual_on
    mode: restart
    trigger:
      - platform: state
        entity_id: input_boolean.heating_boost
        to: "on"
      - platform: state
        entity_id: input_boolean.heating_pcm
        to: "on"
    condition:
      - condition: state
        entity_id: group.gPresent
        state: home
      - condition: template
        value_template: >
          {% set ext_temp = states('sensor.openweathermap_temperature') | int %}
          {% set max_ext_temp = states('input_number.max_ext_temp') | int %}
          {{ ext_temp < max_ext_temp }}
      - condition: template
        value_template: >
          {% set members = expand(['group.gHeating']) | selectattr('state', 'eq', 'on') %}
          {{ members | list | count | int < 2 }}
    action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.heating
    - delay:
        # minutes: "{{ states('input_number.heating_boost_timer') }} | int }}"
        seconds: "{{ 10 | int }}"
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.heating


# manual heating already on
  - id: manual_reset
    mode: restart
    trigger:
      - platform: state
        entity_id: input_boolean.heating_boost
        to: "on"
      - platform: state
        entity_id: input_boolean.heating_pcm
        to: "on"
    condition:
      - condition: template
        value_template: >
          {% set members = expand(['group.gHeating']) | selectattr('state', 'eq', 'on') %}
          {{ members | list | count | int > 1 }}
    action:
    - service: input_boolean.turn_off
      target:
        entity_id: "{{ trigger.entity_id }}"


# manual heating switched off
  - id: manual_off
    mode: restart
    trigger:
      - platform: state
        entity_id: input_boolean.heating_boost
        to: "off"
    # condition:
      # - condition: state
        # entity_id: group.gheating
    action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.heating


# # temp is below `on_temp` + heating switch on
  # - id: heat_temp_set
    # mode: restart
    # trigger:
        # - platform: state
          # entity_id: input_number.heating_temp_set
          # to: "{{ states('input_number.heating_on_temp') | int }}"
    # condition:
        # - condition: or
          # conditions:
              # - condition: state
                # entity_id: switch.heating_switch
                # state: "on"
              # - condition: state
                # entity_id: input_boolean.heating_boost
                # state: "on"
    # action:
    # - service: input_boolean.turn_off
      # entity_id: switch.heating_switch


# # # temp is above `on_temp` + heating switch on
  # # - id: heat_off
    # # mode: restart
    # # trigger:
        # # - platform: numeric_state
          # # entity_id: sensor.temperature
          # # above: "{{ states('input_number.heating_on_temp') | int }}"
    # # action:
    # # - service: input_boolean.turn_off
      # # entity_id: switch.heating_switch


# # # heating temp set
  # # - id: temp_set_on
    # # mode: restart
    # # trigger:
        # # - platform: numeric_state
          # # entity_id: input_number.heating_temp_set
          # # # value_template: "{{ states('input_number.heating_on_temp') }}"
          # # above: "{{ states('sensor.temperature') | int }}"

    # # condition:
      # # - condition: state
        # # entity_id: switch.heating_switch
        # # state: "on"

    # # action:
    # # - service: homeassistant.turn_on
      # # entity_id: switch.heating_switch


  # # # - id: temp_set_off
    # # # mode: restart
    # # # trigger:
        # # # - platform: state
          # # # entity_id: input_number.heating_temp_set
          # # # attribute: value
          # # # # value_template: "{{ states('input_number.heating_on_temp') }}"
          # # # # above: "{{ states('sensor.openweathermap_temperature') }}"
          # # # below: 18

    # # # action:
    # # # - service: input_boolean.turn_off
      # # # entity_id: switch.heating_switch
