
# TODO:
#       - start using this instead of openhab
#       - influx
#           https://community.home-assistant.io/t/home-assistant-community-add-on-influxdb/54491
#       - duck dns
#       - phillips hue
#           https://www.home-assistant.io/integrations/hue/
#           https://stackoverflow.com/questions/65948825/cant-send-command-to-ble-device-philips-hue-bulb-connection-drops
#           https://github.com/walter5138/hue_ble_bash
#       - youtube
#           https://community.home-assistant.io/t/play-youtube-on-smart-tv/101407/43
#           https://www.home-assistant.io/integrations/media_extractor/
#       - nicer sysinfo
#           https://community.home-assistant.io/t/history-graph-with-min-and-max-horizontal-lines/119677/5
#       - group for light + TV
#       - config examples
#           https://github.com/geekofweek/homeassistant
#       - upgrade
#           python -m pip install --upgrade homeassistant homeassistant-cli
#               check following is merge
#               https://github.com/home-assistant-ecosystem/home-assistant-cli/issues/332
#       - on battery - 794296394
#           480mAh - 2021-11-20T15:38 -> 2021-12-20T16:57
#           400mAh - 2021-12-20T18:43 ->

# BACKUP:
#   create backup:
#       backup_file=/tmp/hass_`date +"%FT%T"`.bundle
#       git bundle create backup_file
#       scp backup_file 192.168.1.99:backup/hass-backup
#   recreate from bundle
#       git clone `bundle` repo

# dependencies:
#   apt:
#       - mosquitto-clients, mosquitto, python3-rpi.gpio, python3-spidev,
#       - python3-paho-mqtt, python3-dbus, python3-gi, letsencrypt, libsqlite3-dev, git
#       - nginx (reverse proxy)
#           https://iotechonline.com/home-assistant-access-with-nginx-proxy-and-lets-encrypt/?cn-reloaded=1
#   python-3.10 (compile/install)
#   pip venv:
#       - telebot, gatt-python

# Configure a default setup of Home Assistant (frontend, api, etc)
#default_config:

# Individual options represented by default_config
#cloud:
#logbook:
#map:
#ssdp:
#zeroconf:

api:
config:
energy:
frontend:
history:
input_datetime:
input_select:
mobile_app:
sun:
system_health:
updater:
zone:

homeassistant:
  name: Home
  unit_system: metric
  time_zone: Europe/London
  latitude: !secret home_latitude
  longitude: !secret home_longitude

  # external_url: !secret external_url
  # internal_url: !secret internal_url
  # packages: !include_dir_named packages
  # customize: !include customize.yaml

  allowlist_external_dirs:
    - /home/ghost/homeassistant/conf

  auth_providers:
    - type: trusted_networks
      trusted_networks:
        - 192.168.1.0/24
        # - fd00::/8
        # - fe80::/8
      allow_bypass_login: true
      trusted_users:
        192.168.1.0/24:
          # David
          - f566f23f959541a7b8060b9a6d842e93
          # Luke
          - dcff045ad0ac4aed8b4ba261fc679118
          # Sara
          -  ebe476cf675d4efc8dbcd66bae1a9114
    - type: homeassistant

# http:
  # # api_password: !secret http:password
  # use_x_forwarded_for: true
  # trusted_proxies:
    # - 127.0.0.1
    # # - 192.168.1.80
  # ip_ban_enabled: true
  # login_attempts_threshold: 5

automation: !include_dir_merge_list automation/
group: !include groups.yaml
light: !include lights.yaml
lovelace: !include ui/lovelace.yaml
person: !include person.yaml
recorder: !include recorder.yaml
# script: !include scripts.yaml
# scene: !include scenes.yaml

logger:
  default: warning

device_tracker:
  - platform: bt_home_hub_5
    host: 192.168.1.254
    interval_seconds: 200
    consider_home: 300
    new_device_defaults:
      track_new_devices: false


utility_meter:
  hourly_electricity:
    source: sensor.electric_cost_today
    cycle: hourly
  daily_electricity:
    source: sensor.electric_cost_today
    cycle: daily
  monthly_electricity:
    source: sensor.electric_cost_today
    cycle: monthly
  annual_electricity:
    source: sensor.electric_consumption_year
    cycle: yearly
  hourly_gas:
    source: sensor.gas_cost_today
    cycle: hourly
  daily_gas:
    source: sensor.gas_cost_today
    cycle: daily
  monthly_gas:
    source: sensor.gas_cost_today
    cycle: monthly
  annual_gas:
    source: sensor.gas_consumption_year
    cycle: yearly


mqtt:
    broker: homeassistant
    port: 1883


# https://www.dummylabs.com/post/2019-01-13-influxdb-part1/
influxdb:
    api_version: 1
    ssl: false
    host: 192.168.1.99
    port: 8086
    username: openhab
    password: openhab
    database: openhab_db
    # exclude:
    # entity_globs: '*'
    include:
        entities:
            - switch.heating_switch
            - input_number.heating_temp_set
              # TODO: should include via group.g_heating
            - switch.heating_boost
            - switch.heating_sched
            - switch.heating_pwm

            - group.g_present
        entity_globs:
            - switch.plug*
            - sensor.794296394_*
    # domains:
      # - group.g_plugs
      # - switch


# setup via ui
# media_player:
  # - platform: braviatv
    # host: 192.168.1.24
samsungtv:
  # ue40mu6120
  - host: 192.168.1.7


# setup via ui
# weather:
  # - platform: openweathermap
    # api_key: !secret openweathermap_key


switch:
  - platform: mqtt
    state_topic: "stat/plugs/plug1/POWER"
    command_topic: "cmnd/plugs/plug1/POWER"
    name: plug1

  - platform: mqtt
    state_topic: "stat/plugs/plug2/POWER"
    command_topic: "cmnd/plugs/plug2/POWER"
    name: plug2

  - platform: mqtt
    state_topic: "stat/plugs/plug3/POWER"
    command_topic: "cmnd/plugs/plug3/POWER"
    name: plug3
    retain: true

  # send singnal to switch boiler on/off
  - platform: mqtt
    # state_topic: "state/sensor/heating"
    command_topic: "cmnd/sensor/heating"
    name: Heating Switch
    unique_id: heating_switch
    retain: true
    payload_on: 1
    payload_off: 0


sensor:
  - platform: mqtt
    name: "794296394_temperature"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.temperature }}"
    unit_of_measurement: "°C"
    device_class: temperature
    force_update: true
    # unique_id: "794296394_temperature"
    device:
        identifiers: "794296394"
        name: "jeenode zero 794296394"

  - platform: mqtt
    name: "794296394_adc_temperature"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.adc_temp }}"
    unit_of_measurement: "°C"
    device_class: temperature
    force_update: true
    # unique_id: "794296394_adc_temperature"
    device:
        identifiers: "794296394"
        name: "794296394"

  - platform: mqtt
    name: "794296394_humidity"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.humidity / 1000 | round }}"
    unit_of_measurement: "%"
    device_class: humidity
    force_update: true
    device:
        identifiers: "794296394"
        name: "794296394"

  - platform: mqtt
    name: "794296394_pressure"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.pressure | float / 100 | int }}"
    unit_of_measurement: "hPa"
    device_class: pressure
    force_update: true
    device:
        identifiers: "794296394"
        name: "794296394"

  - platform: mqtt
    name: "794296394_gas_resistance"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.gas_res }}"
    unit_of_measurement: "Ohm"
    force_update: true
    device:
        identifiers: "794296394"
        name: "794296394"

  - platform: mqtt
    name: "794296394_air_quality"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.iaq }}"
    unit_of_measurement: "."
    device_class: aqi
    force_update: true
    device:
        identifiers: "794296394"
        name: "794296394"

  - platform: mqtt
    name: "794296394_air_quality_2"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.iaq2 }}"
    unit_of_measurement: "."
    device_class: aqi
    force_update: true
    device:
        identifiers: "794296394"
        name: "794296394"

  - platform: mqtt
    name: "794296394_last_updated"
    state_topic: "state/sensor/794296394"
    value_template: "{{ value_json.timestamp | timestamp_custom('%d/%m/%y %H:%M:%S') }}"
    device:
        identifiers: "794296394"
        name: "794296394"

  # sensors used for displaying input values to prevent changing in ui
  - platform: template
    sensors:
      i_heating_temp_set:
        friendly_name: Heating Temp Set
        value_template: '{{ states("input_number.heating_temp_set") }}'
        # unit: ""  # degrees
      i_heating:
        friendly_name: Heating
        value_template: '{{ states("group.g_heating") }}'
      heating_temperature:
        friendly_name: Temperature
        value_template: '{{ states("sensor.794296394_temperature") }}'
      sensor_794296394:
        value_template: 'Living Room'


  - platform: systemmonitor
    resources:
      - type: processor_use
      - type: memory_use_percent
      - type: swap_use_percent
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: last_boot

  - platform: uptime
    scan_interval: 600

  - platform: template
    sensors:
      uptime_ha:
        friendly_name: HA Uptime
        value_template: >
          {{ "%0.1f" | format(
            (as_timestamp(now()) - as_timestamp(states('sensor.uptime')))
            / 3600 / 24) }}

  - platform: template
    sensors:
      uptime_sys:
        friendly_name: Uptime
        value_template: >
          {{ "%0.1f" | format(
             (as_timestamp(now()) - as_timestamp(states('sensor.last_boot')))
             / 3600 / 24) }}

  - platform: filesize
    file_paths:
      - /home/ghost/homeassistant/conf/home-assistant_v2.db


input_number:
  heating_on_temp:
    name: Heating On Temp (C)
    initial: 20
    min: 5
    max: 35

  heating_off_temp:
    name: Heating Off Temp (C)
    initial: 10
    min: 5
    max: 35

  max_ext_temp:
    name: Max External Temperature (C)
    initial: 12
    min: 5
    max: 20

  heating_temp_set:
    name: Heating Temperature (C)
    # value: "{{ states(input_number.heating_off_temp) }}"
    min: 0
    max: 100

  heating_boost_timer:
    name: Heating Boost Timer (min)
    initial: 60
    min: 30
    max: 180

  heating_pwm_timer:
    name: Heating PWM Timer (min)
    initial: 240
    min: 100
    max: 400

  heating_pwm_duty_cycle:
    name: Heating PWM Duty Cycle (%)
    # unit: percent
    initial: 20
    min: 10
    max: 50

  heating_pwm_period:
    name: Heating PWM Period (min)
    initial: 30
    min: 0
    max: 60


input_boolean:
  # track if heating is on
  heating:
    name: Heating
  # track heating manually switched on
  heating_boost:
    name: Heating Boost
  heating_pwm:
    name: Heating PWM
  # track heating switched on by schedule
  heating_sched:
    name: Heating Scheduled
  heating_sched_enable:
    name: Heating Scheduled Enabled
  # track heating time/day trigger to abstract schedule rules
  heating_sched_trigger:
    name: Heating Sched Trigger
  # enable holiday mode
  holiday_mode:
    name: Holiday Mode

  switch_off_lr:
    name:  Switch Off

  netflix:
    name:  Netflix

  youtube:
    name:  YouTube
  fix_youtube:
    name: Fix YouTube


############################### DEBUG ENTITIES ################################

input_text:
  debug_text:
    initial: "-"

input_boolean test_b:
  name: test 11

input_number wait:
    name: wait
    min: 100
    max: 2000

sensor i_debug:
  platform: template
  sensors:
    i_debug:
      friendly_name: debug text
      # value_template: >
        # {{ states('input_text.debug_text') }}
        # {% set entity = 'input_boolean.heating_boost' %}
        # {% set ent_str = entity.replace("boolean", "number") + "_timer" %}
        # {{ states(ent_str) | int }}
        # {% set ent_str = entity.replace("boolean", "number") %}
        # {{ states(entity) | int }}
      value_template: >
        {{ state_attr('media.player.sony_bravia_tv', 'source') }}

    # {% set entity = "input_number.{}_timer".format("heating_boost") %}
    # {{ states(entity) | int }}

switch test_s:
  platform: mqtt
  name: test1
  command_topic: "stat/sensor/t1"

switch test2:
  - platform: mqtt
    name: test2
    unique_id: test2
    command_topic: "stat/sensor/t2"
